#!/usr/bin/env bash
script_name="$(basename $0)"
assets="$PREFIX/share/termux-styles/themes"

# Function to display help message
print_usage() {
    echo "Usage: ${script_name} [arguments] [options]"
    echo ""
    echo "Script to manage termux themes."
    echo ""
    echo "Arguments:"
    echo "  apply [theme]     Apply theme."
    echo "  dark              Enable dark theme."
    echo "  light             Enable light theme."
    echo ""
    echo "Options:"
    echo "  -h|--help         Print this message."
    echo ""
}

# Function to print error and help messages
error() {
    local errmsg="${1:-Unknown error}"
    echo -e "\033[1;31mError\033[0m: ${errmsg}\n" 1>&2
    print_usage
}

apply_theme() {
    local theme="$1"
    local destination="$HOME/.termux/colors.properties"

    # Ensure 'theme' exists
    if [[ ! -f "$theme" ]]; then
        error "Theme not found: $theme"
        return 1
    fi

    # Apply theme
    cp "$theme" "$destination"
    termux-reload-settings
}

select_theme() {
    local selection

    # 
    selection=$(ls "$assets"/*.properties | xargs -n1 basename --suffix=".properties" | fzf)
    if [[ "$?" -gt 0 || -z "$selection" ]]; then
        error "Failed to select a theme"
        return 1
    fi

    # Ensure selection exists
    selection="$assets/$selection.properties"
    if [[ ! -f "$selection" ]]; then 
        error "Missing file: $selection"
        return 1
    fi

    # Return 'selection'
    echo "$selection"
}

# Ensure 'assets' exists
if [[ ! -d "$assets" ]]; then
    error "Missing directory: $assets"
    exit 1
fi

# Ensure 'assets' contains at least one .properties file
if [[ ! $(find "$assets" -maxdepth 1 -type f -name '*.properties') ]]; then
    error "No properties files found: $assets"
    exit 1
fi

# Get some help
if [[ "$#" -eq 0 ]]; then
    print_usage
    exit 1
fi

# Parse arguments
theme=""
while [[ "$#" -gt 0 ]]; do
    case "$1" in
        -h|--help|-help|help|h)
            print_usage
            exit 0
            ;;
        apply|set)
            if [[ -z "$2" || "$2" = -* ]]; then
                theme=$(select_theme) || exit 1
            else
                theme="$2"
                shift
            fi
            apply_theme "$theme"
            ;;
        dark)
            apply_theme "$assets/base16-3024-dark.properties"
            exit "$?"
            ;;
        light)
            apply_theme "$assets/base16-3024-light.properties"
            exit "$?"
            ;;
        -*)
            error "Unknown option: $1"
            exit 1
            ;;
        *)
            error "Unknown argument: $1"
            exit 1
            ;;
    esac
    shift
done
